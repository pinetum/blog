<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Test on Qtlin.tw blog</title>
    <link>/categories/test/</link>
    <description>Recent content in Test on Qtlin.tw blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-TW</language>
    <lastBuildDate>Tue, 18 Apr 2017 07:23:23 +0800</lastBuildDate>
    
	<atom:link href="/categories/test/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>測試文</title>
      <link>/blog/2017/04/18/%E6%B8%AC%E8%A9%A6%E6%96%87/</link>
      <pubDate>Tue, 18 Apr 2017 07:23:23 +0800</pubDate>
      
      <guid>/blog/2017/04/18/%E6%B8%AC%E8%A9%A6%E6%96%87/</guid>
      <description>CH13 Web Server Development 本章學習重點 - 建立可存取的路徑 - 對可存取的路徑做權限管控 - 取得傳入的參數 - 對已存在的handler修改 - 使用RPC API
建立可存取的路徑 例如：http://127.0.0.1:8069/my_module/books
 於controllers/init.py加入import main 於init.py加入import controllers 建立controllers/main.py  from openerp import http from openerp.http import request class Main(http.Controller): @http.route(&#39;/my_module/books&#39;, type=&#39;http&#39;, auth=&#39;none&#39;) def books(self): records = request.env[&#39;library.book&#39;].sudo().search([]) result = &#39;&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;&amp;lt;table&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&#39; result += &#39;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;tr&amp;gt;&amp;lt;td&amp;gt;&#39;.join( records.mapped(&#39;name&#39;)) result += &#39;&amp;lt;/td&amp;gt;&amp;lt;/tr&amp;gt;&amp;lt;/table&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&#39; return result @http.route(&#39;/my_module/books/json&#39;, type=&#39;json&#39;, auth=&#39;none&#39;) def books_json(self): records = request.env[&#39;library.book&#39;]\ .sudo().search([]) return records.read([&#39;name&#39;])   @http.route:decorator，用來告知odoo此method是web accessible，且可以將多個網址路徑對應到同一個method中 return something:根據decorator中定義的type需要回傳的物件會有所不同</description>
    </item>
    
  </channel>
</rss>